name: Create discussion

on:
  # schedule:
  #   # 毎週水曜 13:00 JST に実行
  #   - cron: "0 4 * * wed"
  workflow_dispatch:

jobs:
  get_next_meeting_date:
    uses: route06/actions/.github/workflows/calc_next_date.yml@v2
    with:
      interval: weekly
      # target_day: wednesday # NOTE: MTG開催曜日に合わせて変更してください

  # create_discussion:
  #   needs: get_next_meeting_date
  #   uses: route06/actions/.github/workflows/create_gh_discussion.yml@v2
  #   with:
  #     # NOTE: 作成するDiscussionのタイトルを指定
  #     title: ${{ needs.get_next_meeting_date.outputs.next_date }} 週 Hoge weekly meeting
  #     # NOTE: category_slugについては補足参照
  #     category_slug: ideas
  #     # NOTE: 作成するDiscussionで使用するテンプレートファイルのパスを指定
  #     description_template_path: .github/workflows/templates/important_discussion.yml

  create_comment:
    # needs: create_discussion
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      discussions: write
    env:
      DISCUSSION_ID: 'D_kwDOMR5Zws4AbV7e'
    steps:
      # Replace "needs.create_discussion.outputs.discussion_id" to "env.DISCUSSION_ID"
      - name: debug
        run: |
          echo "discussion_id: ${{ env.DISCUSSION_ID }}"
      - id: get_comment_body
        run: |
          echo "comment_body<<EOF" >> $GITHUB_OUTPUT
          echo "## 📰 OSS News Checking" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "* https://news.ycombinator.com/" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "\ \ \ \ * See also Slack \`#news\`" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "* https://www.reddit.com/r/opensource/" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "* https://github.com/trending?since=weekly&spoken_language_code=" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "* https://www.google.com/search?q=open+source" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Add discussion comment
        uses: octokit/graphql-action@v2.x
        with:
          query: |
            mutation($body:String!, $discussion_id:ID!) {
              addDiscussionComment(input: {discussionId: $discussion_id, body: $body}) {
                comment {
                  id
                }
              }
            }
          variables: |
            discussion_id: "${{ env.DISCUSSION_ID }}"
            body: "${{ steps.get_comment_body.outputs.comment_body }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
